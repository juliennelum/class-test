<project name="struts-form" basedir="../" default="!rebuild-and-reload">

	<!-- Configure the context path for this application -->
	<property name="path"     value="/mandiant-struts-form-incomplete-blacklist"/>

    <!-- Local system paths -->
    <!--<property name="servlet-api.jar" value="/usr/share/tomcat6/lib/servlet-api.jar"/>-->
   
        <!-- NOTE: If "dist" target is used, a local
             "projects/lib" directory will be utilized or created -->
    <property name="distpath.project" value="/projects/lib"/>


    <!-- Project settings -->
    <property name="project.title" value="Mandiant Struts Form (Incomplete Black List)"/>
    <property name="project.distname" value="mandiant-struts-form-incomplete-blacklist"/>
    <property name="project.version" value="1.0"/>


    <!-- Path settings -->
    <property name="doc.path" value="./doc/api"/>
    <property name="doc.src" value="./src/java"/>
	
	<!-- Configure properties to access the Manager application -->
	  <property name="url"      value="http://localhost:8080/manager"/>
	  <property name="username" value="admin"/>
	  <property name="password" value="owaspbwa"/>

	  <!-- Configure the custom Ant tasks for the Manager application -->
	  <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
	  <taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
	  <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
	  <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
	  <taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
	  <taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
	  <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
	  <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>
	

    <!-- classpath for Struts 1.1 -->
    <path id="compile.classpath">
	<pathelement path ="/home/vmware/workspace/WebGoat/tomcat/common/lib/servlet-api.jar"/>
        <pathelement path ="./lib/commons-beanutils.jar"/>
        <pathelement path ="./lib/commons-digester.jar"/>
        <pathelement path ="./lib/struts.jar"/>
        <pathelement path ="./classes"/>
        <pathelement path ="${classpath}"/>
    </path>


    <!-- Check timestamp on files -->
    <target name="prepare">
        <tstamp/>
    </target>


    <!-- Copy any resource or configuration files -->
    <target name="resources">
        <copy todir="classes" includeEmptyDirs="no">
            <fileset dir="./src/java">
            <patternset>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </patternset>
            </fileset>
        </copy>
    </target>


    <!-- Normal build of application -->
    <target name="compile" depends="prepare,resources">
        <javac srcdir="src" destdir="classes">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>


    <!-- Remove classes directory for clean build -->
    <target name="clean"
      description="Prepare for clean build">
      <delete dir="classes"/>
      <mkdir  dir="classes"/>
    </target>


    <!-- Build Javadoc documentation -->
    <target name="javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="./doc/api"/>
        <mkdir dir="./doc/api"/>
        <javadoc 
        	sourcepath="./src"
        	packagenames="com.mandiant.*"
            destdir="./doc/api"
            classpath="${servlet.jar}:${jdbc20ext.jar}"
            author="true"
            private="true"
            version="true"
            windowtitle="${project.title} API Documentation"
            doctitle="&lt;h1&gt;${project.title} Documentation (Version ${project.version})&lt;/h1&gt;"
            bottom="Copyright &#169; 2002">
            <classpath refid="compile.classpath"/>
        </javadoc>
    </target>

	<!-- reload application in tomcat -->
	<target name="reload" description="Reload web application"
	          depends="compile">
	    <reload  url="${url}" username="${username}" password="${password}"
	            path="${path}"/>
	  </target>

    <!-- Build entire project -->
    <target name="project" depends="clean,prepare,compile,reload,javadoc"/>


    <!-- Create binary distribution -->
    <target name="dist"
        description="Create binary distribution">

      <mkdir
        dir="${distpath.project}"/>
      <jar
        jarfile="${distpath.project}/${project.distname}.jar"
        basedir="./classes"/>
      <copy
        file="${distpath.project}/${project.distname}.jar"
        todir="${distpath.project}"/>

      <war
        basedir="../"
        warfile="${distpath.project}/${project.distname}.war"
        webxml="web.xml">
        <exclude name="${distpath.project}/${project.distname}.war"/>
       </war>

    </target>


    <!-- Build project and create distribution-->
    <target name="all" depends="project,dist"/>
	
	<!-- Default target - rebuild and reload -->
	<target name="!rebuild-and-reload" depends="clean,prepare,compile,reload"/>

</project>
